const adjectives = [
  '희망찬', '조용한', '기운찬', '차분한', '용맹한', '활기찬', '순수한', '긍정적인', '유쾌한', '단호한',
  '용감한', '따뜻한', '화려한', '은은한', '예리한', '다정한', '신비로운', '섬세한', '우아한', '절묘한',
  '기발한', '창의적인', '정열적인', '정직한', '활발한', '화끈한', '세련된', '똑똑한', '매혹적인', '지혜로운',
  '평화로운', '상냥한', '강렬한', '사랑스러운', '고요한', '대담한', '영리한', '눈부신', '멋진', '잔잔한',
  '낭만적인', '풍부한', '힘찬', '독립적인', '매력적인', '단단한', '깔끔한', '부드러운', '순진한', '젊은',
  '빛나는', '맑은', '부끄러운', '깨끗한', '행복한', '쓸쓸한', '소박한', '희귀한', '능동적인', '가벼운',
  '따사로운', '포근한', '명랑한', '사나운', '신속한', '날카로운', '포악한', '환상적인', '고독한', '냉철한',
  '무서운', '고급스러운', '우스운', '기묘한', '이국적인', '지적인', '엄격한', '유연한', '불사신의', '열정적인',
  '순박한', '충성스러운', '지속적인', '뛰어난', '근면한', '엄청난', '놀라운', '미묘한', '대단한', '신비한',
  '힘겨운', '적극적인', '통찰력있는', '충만한', '침착한', '여유로운', '장엄한', '낯익은', '조화로운', '단순한',
  '웅장한', '믿음직한', '차가운', '철저한', '과감한', '결단력있는', '현명한', '엄숙한', '모험적인', '기민한',
  '무심한', '깨달은', '호기심많은', '비범한', '온화한', '강인한', '독창적인', '분명한', '흥미로운', '평탄한',
  '도전적인', '기쁨있는', '존경스러운', '빠른', '친절한', '근사한', '끈기있는', '가치있는'
];


const nouns = [
  '마리오', '루이지', '피치 공주', '요시', '토드', '쿠파', '데이지 공주', '와리오', '와루이지', '돈키콩',
  '디디콩', '크랭키콩', '벨져 주니어', '샤이 가이', '쿠파 트루파', '피디 프라나', '젤다 공주', '링크',
  '가논돌프', '임파', '시크', '나비', '에포나', '마린', '동키콩', '잉클링', '캡틴 팔콘', '폭시',
  '커비', '디디디 대왕', '메타 나이트', '사무스 아란', '리들리', '니스', '루카스', '크로마', '로빈',
  '파이어 엠블렘 마르스', '로이', '이크', '리자몽', '피카츄', '이브이', '푸린', '꼬부기', '뮤츠',
  '루카리오', '메타몽', '레지기라스', '키르히', '카쿠쿠루', '타미야', '빨간팬더', '아기 팬더', '코알라',
  '너구리', '토끼', '햄스터', '다람쥐', '고양이', '강아지', '새끼 늑대', '알파카', '앵무새', '미니 돼지',
  '꼬마 양', '너구리촌장', '유카리', '리사', '아뇨나', '톰토드', '라이온킹', '푸바', '디지몬 아구몬',
  '디지몬 테리어몬', '스머프 파파', '푸우', '피글렛', '버디', '제이디', '젤리', '리틀베어', '푸들리',
  '곰돌이', '코비코', '치코리타', '무로링', '메리', '레드 판다', '토끼 아기', '올빼미', '알로에', '팡고',
  '체리', '페퍼', '리틀토이', '흰강아지', '냥코', '망고', '코코', '고슴도치', '물범', '돌고래',
  '리루코', '킹펭귄', '타라', '발리', '체스', '미루', '도토리', '샌디', '아가', '슈가', '페트라',
  '버블', '트위티', '주디', '마블', '쵸비', '피치', '보리', '젬마', '레이븐', '카파라', '모카', '프라다',
  '루비', '베리', '쿠로미', '라라', '치와와', '파이퍼'
];



// size 가 2 의 제곱일때 가능! bitwise 를 이용해서 부동소수점 연산을 하지 않음.
function getRandomIntBitwise(size: number) {
  return Math.floor(Math.random() * size); // 0부터 15까지의 정수
}

function getRandomAdjective() {
  return adjectives[getRandomIntBitwise(adjectives.length)];
}

function getRandomNoun(){
  // return '창현';
  return nouns[getRandomIntBitwise(nouns.length)];
}

function getRandomBrightColor(): string {
  const hue = Math.floor(Math.random() * 360);
  const saturation = Math.floor(Math.random() * 50) + 50;
  const lightness = Math.floor(Math.random() * 30) + 50;

  return `hsl(${hue}, ${saturation}%, ${lightness}%)`;
}

export { getRandomAdjective, getRandomNoun, getRandomBrightColor };
